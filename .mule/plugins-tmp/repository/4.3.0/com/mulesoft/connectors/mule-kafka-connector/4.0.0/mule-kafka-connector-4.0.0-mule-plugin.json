{
  "minMuleVersion": "4.1.1",
  "extensionModel": {
    "types": [
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "com.mulesoft.connectors.kafka.api.source.ConsumerContext",
            "classname": "com.mulesoft.connectors.kafka.api.KafkaRecordAttributes",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connectors.kafka.api.KafkaRecordAttributes",
          "typeAlias": {"value": "KafkaRecordAttributes"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "consumerCommitKey"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.ZonedDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "creationTimestamp"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"classInformation": {
                "implementedInterfaces": [],
                "parent": "",
                "classname": "java.util.Map",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "java.lang.String",
                  "byte[]"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": true
              }},
              "type": "Object",
              "fields": [],
              "open": {
                "annotations": {"classInformation": {
                  "implementedInterfaces": [
                    "java.lang.Cloneable",
                    "java.io.Serializable"
                  ],
                  "parent": "",
                  "classname": "byte[]",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Binary"
              }
            },
            "key": {"name": "headers"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.io.Closeable"],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Binary"
            },
            "key": {"name": "key"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "leaderEpoch"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.ZonedDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "logAppendTimestamp"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "offset"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partition"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "serializedKeySize"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "serializedValueSize"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "topic"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "com.mulesoft.connectors.kafka.api.operation.KafkaMessageMetadata",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connectors.kafka.api.operation.KafkaMessageMetadata",
          "typeAlias": {"value": "KafkaMessageMetadata"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "offset"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "partition"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "serializedKeySize"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "serializedValueSize"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"typeId": "java.time.ZonedDateTime"},
              "type": "DateTime"
            },
            "key": {"name": "timestamp"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "topic"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "com.mulesoft.connectors.kafka.api.source.ConsumerContext",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connectors.kafka.api.source.ConsumerContext",
          "typeAlias": {"value": "ConsumerContext"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {"visibility": "READ_ONLY"},
          "model": {"type": "String"},
          "key": {"name": "consumerCommitKey"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "com.mulesoft.connectors.kafka.api.source.Record",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connectors.kafka.api.source.Record",
          "typeAlias": {"value": "Record"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "com.mulesoft.connectors.kafka.api.source.ConsumerContext",
                  "classname": "com.mulesoft.connectors.kafka.api.KafkaRecordAttributes",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "com.mulesoft.connectors.kafka.api.KafkaRecordAttributes",
                "typeAlias": {"value": "KafkaRecordAttributes"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "consumerCommitKey"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {"typeId": "java.time.ZonedDateTime"},
                    "type": "DateTime"
                  },
                  "key": {"name": "creationTimestamp"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "byte[]"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {
                      "annotations": {"classInformation": {
                        "implementedInterfaces": [
                          "java.lang.Cloneable",
                          "java.io.Serializable"
                        ],
                        "parent": "",
                        "classname": "byte[]",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      }},
                      "type": "Binary"
                    }
                  },
                  "key": {"name": "headers"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Binary"
                  },
                  "key": {"name": "key"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "leaderEpoch"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {"typeId": "java.time.ZonedDateTime"},
                    "type": "DateTime"
                  },
                  "key": {"name": "logAppendTimestamp"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "offset"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "partition"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "serializedKeySize"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "serializedValueSize"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "topic"}
                }
              ]
            },
            "key": {"name": "attributes"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.io.Closeable"],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Binary"
            },
            "key": {"name": "payload"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "com.mulesoft.connectors.kafka.api.source.TopicPartition",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "com.mulesoft.connectors.kafka.api.source.TopicPartition",
          "typeAlias": {"value": "TopicPartition"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {"type": "String"},
            "key": {
              "name": "topic",
              "required": "true"
            }
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {
              "name": "partition",
              "required": "true"
            }
          }
        ]
      }
    ],
    "messageSources": [],
    "functions": [],
    "configurations": [
      {
        "displayModel": {"displayName": "Consumer configuration"},
        "externalLibraryModels": [],
        "operations": [
          {
            "kind": "operation",
            "executionType": "BLOCKING",
            "description": "Commits the offsets associated to a message or batch of messages consumed in a Message Listener. This would be a List or a single message consumed in the BatchMessageListenerSource",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {
                      "summary": "The consumer commit key to use to commit the message. This is provided in the parameters produced by the Message Listener Source",
                      "displayName": "Consumer commit key"
                    },
                    "role": "BEHAVIOUR",
                    "description": "The commitKey of the last poll. This operation is only valid when used inside a flow that is using on of the MessageListenerSource(s) ( BatchMessageListenerSource / BatchMessageListenerSource) which insert this value as an attribute in the Mule Event",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "commitKey",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "The name of the configuration to be used to execute this component",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                      "type": "Object",
                      "fields": []
                    },
                    "required": true,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": true
                    },
                    "name": "config-ref",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [{
                      "parent": {
                        "namespace": "MULE",
                        "type": "MODULE_CONFIG"
                      },
                      "namespace": "KAFKA",
                      "type": "CONSUMER-CONFIG"
                    }],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "supportsStreaming": false,
            "requiresConnection": true,
            "blocking": true,
            "name": "commit",
            "stereotype": {
              "parent": {
                "parent": {
                  "namespace": "MULE",
                  "type": "PROCESSOR"
                },
                "namespace": "KAFKA",
                "type": "PROCESSOR"
              },
              "namespace": "KAFKA",
              "type": "COMMIT"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": [
              "KAFKA:INVALID_ACK_MODE",
              "KAFKA:RETRY_EXHAUSTED",
              "KAFKA:TIMEOUT",
              "KAFKA:SESSION_NOT_FOUND",
              "KAFKA:NOT_FOUND",
              "KAFKA:CONNECTIVITY"
            ]
          },
          {
            "kind": "operation",
            "executionType": "BLOCKING",
            "description": "This operation allows receiving messages from one or more Kafka topics, it works very similarly to the Message Listener source, so all the operations that apply to that, will apply to this operation as well.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {"displayName": "Consumption timeout"},
                    "role": "BEHAVIOUR",
                    "description": "The amount of TimeUnits that this operation will wait for receiving messages.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {"displayName": "Timeout time unit"},
                    "role": "BEHAVIOUR",
                    "description": "The unit of time for the timeout property.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "java.util.concurrent.TimeUnit",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeoutTimeUnit",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "operationTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "java.util.concurrent.TimeUnit",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "operationTimeoutTimeUnit",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "The name of the configuration to be used to execute this component",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                      "type": "Object",
                      "fields": []
                    },
                    "required": true,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": true
                    },
                    "name": "config-ref",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": [{
                      "parent": {
                        "namespace": "MULE",
                        "type": "MODULE_CONFIG"
                      },
                      "namespace": "KAFKA",
                      "type": "CONSUMER-CONFIG"
                    }],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "Configure if repeatable streams should be used and their behaviour",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "abstract-byte-streaming-strategy",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "type": {
                      "of": [
                        {
                          "annotations": {"typeId": "repeatable-in-memory-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "initialBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "bufferSizeIncrement"}
                            },
                            {
                              "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                              "model": {
                                "annotations": {
                                  "default": "1024",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "maxBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {"typeId": "repeatable-file-store-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "inMemorySize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {
                            "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                            "typeId": "non-repeatable-stream"
                          },
                          "type": "Object",
                          "fields": []
                        }
                      ],
                      "format": "java",
                      "annotations": {"typeId": "ByteStreamingStrategy"},
                      "type": "Union"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "streamingStrategy",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Output",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {"displayName": "Target Variable"},
                    "role": "BEHAVIOUR",
                    "description": "The name of a variable on which the operation's output will be placed",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "target",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {"displayName": "Target Value"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "#[payload]",
                    "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "REQUIRED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "targetValue",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": {
                  "validMimeTypes": ["application/octet-stream"],
                  "id": "application/octet-stream",
                  "label": "application/octet-stream"
                },
                "annotations": {"classInformation": {
                  "implementedInterfaces": ["java.io.Closeable"],
                  "parent": "",
                  "classname": "java.io.InputStream",
                  "hasDefaultConstructor": true,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Binary"
              }
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "@ref:com.mulesoft.connectors.kafka.api.KafkaRecordAttributes"
              }
            },
            "supportsStreaming": true,
            "requiresConnection": true,
            "blocking": true,
            "name": "consume",
            "stereotype": {
              "parent": {
                "parent": {
                  "namespace": "MULE",
                  "type": "PROCESSOR"
                },
                "namespace": "KAFKA",
                "type": "PROCESSOR"
              },
              "namespace": "KAFKA",
              "type": "CONSUME"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": [
              "KAFKA:RETRY_EXHAUSTED",
              "KAFKA:ILLEGAL_STATE",
              "KAFKA:TIMEOUT",
              "KAFKA:INVALID_OFFSET",
              "KAFKA:INVALID_INPUT",
              "KAFKA:NOT_FOUND",
              "KAFKA:CONNECTIVITY"
            ]
          },
          {
            "displayModel": {"summary": "Sets the current offset value for the given topic, partition and consumer group of the listener."},
            "kind": "operation",
            "executionType": "BLOCKING",
            "description": "Sets the current offset of the consumer for the given topic and partition to the provided offset value.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {
                      "summary": "The topic name",
                      "displayName": "Topic"
                    },
                    "role": "BEHAVIOUR",
                    "description": "The name of the topic on which the seek operation will be performed.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "topic",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "The name of the partition",
                      "displayName": "Partition"
                    },
                    "role": "BEHAVIOUR",
                    "description": "The partition number that will have its offset modified.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "partition",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "The offset to seek to",
                      "displayName": "Offset"
                    },
                    "role": "BEHAVIOUR",
                    "description": "The offset value to commit for the configured partition.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "long",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "offset",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "operationTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "java.util.concurrent.TimeUnit",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "operationTimeoutTimeUnit",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "The name of the configuration to be used to execute this component",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                      "type": "Object",
                      "fields": []
                    },
                    "required": true,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": true
                    },
                    "name": "config-ref",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": [{
                      "parent": {
                        "namespace": "MULE",
                        "type": "MODULE_CONFIG"
                      },
                      "namespace": "KAFKA",
                      "type": "CONSUMER-CONFIG"
                    }],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "supportsStreaming": false,
            "requiresConnection": true,
            "blocking": true,
            "name": "seek",
            "stereotype": {
              "parent": {
                "parent": {
                  "namespace": "MULE",
                  "type": "PROCESSOR"
                },
                "namespace": "KAFKA",
                "type": "PROCESSOR"
              },
              "namespace": "KAFKA",
              "type": "SEEK"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": [
              "KAFKA:INVALID_TOPIC",
              "KAFKA:RETRY_EXHAUSTED",
              "KAFKA:TIMEOUT",
              "KAFKA:INVALID_OFFSET",
              "KAFKA:INVALID_INPUT",
              "KAFKA:NOT_FOUND",
              "KAFKA:CONNECTIVITY"
            ]
          }
        ],
        "messageSources": [
          {
            "displayModel": {"displayName": "Batch message listener"},
            "errorCallback": {
              "name": "onError",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "kind": "source",
            "description": "This source supports the consumption of messages from a Kafka Cluster, producing a List of messages to the flow.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Poll timeout"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeout",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Poll timeout time unit"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "java.util.concurrent.TimeUnit",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeoutTimeUnit",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Acknowledgement mode"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "com.mulesoft.connectors.kafka.api.source.AckMode",
                        "enum": {
                          "values": [
                            "AUTO",
                            "MANUAL",
                            "IMMEDIATE",
                            "DUPS_OK"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "ackMode",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {"displayName": "Amount of parallel consumers"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "1",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "parallelConsumersAmount",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "The name of the configuration to be used to execute this component",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                      "type": "Object",
                      "fields": []
                    },
                    "required": true,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": true
                    },
                    "name": "config-ref",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "allowedStereotypeModels": [{
                      "parent": {
                        "namespace": "MULE",
                        "type": "MODULE_CONFIG"
                      },
                      "namespace": "KAFKA",
                      "type": "CONSUMER-CONFIG"
                    }],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "defaultValue": false,
                    "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "primaryNodeOnly",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 8
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "Defines a policy for processing the redelivery of the same message",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "abstract-redelivery-policy",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "RedeliveryPolicy"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxRedeliveryCount"}
                        },
                        {
                          "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                          "model": {"type": "String"},
                          "key": {"name": "messageDigestAlgorithm"}
                        },
                        {
                          "annotations": {
                            "flattened": {},
                            "description": {"value": "Defines which strategy is used to identify the messages."}
                          },
                          "model": {
                            "annotations": {
                              "exclusiveOptionals": {
                                "isOneRequired": true,
                                "exclusiveParameterNames": [
                                  "useSecureHash",
                                  "idExpression"
                                ]
                              },
                              "typeId": "RedeliveryPolicyMessageIdentifier"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "useSecureHash"}
                              },
                              {
                                "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                                "model": {"type": "String"},
                                "key": {"name": "idExpression"}
                              }
                            ]
                          },
                          "key": {"name": "MessageIdentifier"}
                        },
                        {
                          "annotations": {
                            "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                            "stereotype": {"allowedStereotypes": [{
                              "namespace": "OS",
                              "type": "OBJECT_STORE"
                            }]}
                          },
                          "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                          "key": {"name": "objectStore"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "redeliveryPolicy",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Redelivery",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "hasResponse": false,
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "item": {"type": "@ref:com.mulesoft.connectors.kafka.api.source.Record"},
                "format": "java",
                "annotations": {"classInformation": {
                  "implementedInterfaces": ["java.util.Collection"],
                  "parent": "",
                  "classname": "java.util.List",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": ["com.mulesoft.connectors.kafka.api.source.Record"],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Array"
              }
            },
            "successCallback": {
              "name": "onSuccess",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "@ref:com.mulesoft.connectors.kafka.api.source.ConsumerContext"
              }
            },
            "supportsStreaming": false,
            "requiresConnection": true,
            "runsOnPrimaryNodeOnly": false,
            "name": "batch-message-listener",
            "terminateCallbackModel": {
              "name": "onTerminate",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "stereotype": {
              "parent": {
                "parent": {
                  "namespace": "MULE",
                  "type": "SOURCE"
                },
                "namespace": "KAFKA",
                "type": "SOURCE"
              },
              "namespace": "KAFKA",
              "type": "BATCH-MESSAGE-LISTENER"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": []
          },
          {
            "displayModel": {"displayName": "Message listener"},
            "errorCallback": {
              "name": "onError",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "kind": "source",
            "description": "This source supports the consumption of messages from a Kafka Cluster, producing a single message to the flow.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Poll timeout"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeout",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Poll timeout time unit"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "java.util.concurrent.TimeUnit",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "pollTimeoutTimeUnit",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {
                      "summary": "",
                      "displayName": "Acknowledgement mode"
                    },
                    "role": "BEHAVIOUR",
                    "description": "TODO :Add docs.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeId": "com.mulesoft.connectors.kafka.api.source.AckMode",
                        "enum": {
                          "values": [
                            "AUTO",
                            "MANUAL",
                            "IMMEDIATE",
                            "DUPS_OK"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": true,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "ackMode",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "displayModel": {"displayName": "Amount of parallel consumers"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "1",
                    "description": "",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "parallelConsumersAmount",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "The name of the configuration to be used to execute this component",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                      "type": "Object",
                      "fields": []
                    },
                    "required": true,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": true
                    },
                    "name": "config-ref",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "allowedStereotypeModels": [{
                      "parent": {
                        "namespace": "MULE",
                        "type": "MODULE_CONFIG"
                      },
                      "namespace": "KAFKA",
                      "type": "CONSUMER-CONFIG"
                    }],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "defaultValue": false,
                    "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "primaryNodeOnly",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 9
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "Configure if repeatable streams should be used and their behaviour",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "abstract-byte-streaming-strategy",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "type": {
                      "of": [
                        {
                          "annotations": {"typeId": "repeatable-in-memory-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "initialBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "bufferSizeIncrement"}
                            },
                            {
                              "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                              "model": {
                                "annotations": {
                                  "default": "1024",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "maxBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {"typeId": "repeatable-file-store-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "inMemorySize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {
                            "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                            "typeId": "non-repeatable-stream"
                          },
                          "type": "Object",
                          "fields": []
                        }
                      ],
                      "format": "java",
                      "annotations": {"typeId": "ByteStreamingStrategy"},
                      "type": "Union"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "streamingStrategy",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  },
                  {
                    "role": "BEHAVIOUR",
                    "description": "Defines a policy for processing the redelivery of the same message",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "abstract-redelivery-policy",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "RedeliveryPolicy"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxRedeliveryCount"}
                        },
                        {
                          "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                          "model": {"type": "String"},
                          "key": {"name": "messageDigestAlgorithm"}
                        },
                        {
                          "annotations": {
                            "flattened": {},
                            "description": {"value": "Defines which strategy is used to identify the messages."}
                          },
                          "model": {
                            "annotations": {
                              "exclusiveOptionals": {
                                "isOneRequired": true,
                                "exclusiveParameterNames": [
                                  "useSecureHash",
                                  "idExpression"
                                ]
                              },
                              "typeId": "RedeliveryPolicyMessageIdentifier"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "useSecureHash"}
                              },
                              {
                                "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                                "model": {"type": "String"},
                                "key": {"name": "idExpression"}
                              }
                            ]
                          },
                          "key": {"name": "MessageIdentifier"}
                        },
                        {
                          "annotations": {
                            "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                            "stereotype": {"allowedStereotypes": [{
                              "namespace": "OS",
                              "type": "OBJECT_STORE"
                            }]}
                          },
                          "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                          "key": {"name": "objectStore"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "redeliveryPolicy",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Redelivery",
                      "query": false,
                      "text": false,
                      "order": 7
                    },
                    "allowedStereotypeModels": [],
                    "isComponentId": false
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "blocking"}
                          }
                        ]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "hasResponse": false,
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": {
                  "validMimeTypes": ["*/*"],
                  "id": "*/*",
                  "label": "*/*"
                },
                "annotations": {"classInformation": {
                  "implementedInterfaces": ["java.io.Closeable"],
                  "parent": "",
                  "classname": "java.io.InputStream",
                  "hasDefaultConstructor": true,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Any"
              }
            },
            "successCallback": {
              "name": "onSuccess",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "@ref:com.mulesoft.connectors.kafka.api.KafkaRecordAttributes"
              }
            },
            "supportsStreaming": true,
            "requiresConnection": true,
            "runsOnPrimaryNodeOnly": false,
            "name": "message-listener",
            "terminateCallbackModel": {
              "name": "onTerminate",
              "description": "",
              "modelProperties": {},
              "parameterGroupModels": []
            },
            "stereotype": {
              "parent": {
                "parent": {
                  "namespace": "MULE",
                  "type": "SOURCE"
                },
                "namespace": "KAFKA",
                "type": "SOURCE"
              },
              "namespace": "KAFKA",
              "type": "MESSAGE-LISTENER"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": []
          }
        ],
        "name": "consumer-config",
        "description": "",
        "modelProperties": {"requiredForMetadata": {"requiredParameters": [
          "ackMode",
          "pollTimeout",
          "pollTimeoutTimeUnit",
          "operationTimeout",
          "operationTimeoutTimeUnit",
          "zoneId",
          "name"
        ]}},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "MODULE_CONFIG"
          },
          "namespace": "KAFKA",
          "type": "CONSUMER-CONFIG"
        },
        "parameterGroupModels": [{
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {
                "summary": "Declares the kind of Acknowledgement mode supported.",
                "displayName": "Default acknowledgement mode"
              },
              "role": "BEHAVIOUR",
              "defaultValue": "AUTO",
              "description": "Defines the way that the Kafka Broker instance is notified of the consumption of messages. AUTO: Messages are committed only if the flow is finished successfully. MANUAL: The user must commit manually through the Commit operation. IMMEDIATE: Mule automatically commits the messages upon reception and before triggering the flow. DUPS_OK: Same as the MANUAL mode, but the commit is made asynchronously, which can lead to duplicate records.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "typeId": "com.mulesoft.connectors.kafka.api.source.AckMode",
                  "enum": {
                    "values": [
                      "AUTO",
                      "MANUAL",
                      "IMMEDIATE",
                      "DUPS_OK"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "ackMode",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {
                "summary": "The amount of time units to block).",
                "displayName": "Default listener poll timeout"
              },
              "role": "BEHAVIOUR",
              "defaultValue": "100",
              "description": "The time, in time units, spent waiting to do a poll if data is not available in the buffer (fetched). If no value is set, returns immediately with any records that are available currently in the buffer, else returns empty. Must not be negative.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.lang.Comparable"],
                    "parent": "java.lang.Number",
                    "classname": "java.lang.Integer",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "int": {}
                },
                "type": "Number"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "pollTimeout",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Default listener poll timeout time unit"},
              "role": "BEHAVIOUR",
              "defaultValue": "MILLISECONDS",
              "description": "The time unit for the polling timeout. This combines with pollTimeout to define the total timeout for the polling.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "typeId": "java.util.concurrent.TimeUnit",
                  "enum": {
                    "values": [
                      "NANOSECONDS",
                      "MICROSECONDS",
                      "MILLISECONDS",
                      "SECONDS",
                      "MINUTES",
                      "HOURS",
                      "DAYS"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "pollTimeoutTimeUnit",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {
                "summary": "The amount of time units to block).",
                "displayName": "Default listener poll timeout"
              },
              "role": "BEHAVIOUR",
              "defaultValue": "-1",
              "description": "The time, in time units, spent waiting for an operation to finish. If no value is set or a negative value is set, the operation will wait forever. Must not be negative.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "",
                    "classname": "int",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": true,
                    "isMap": false
                  },
                  "int": {}
                },
                "type": "Number"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "operationTimeout",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Default operation timeout time unit"},
              "role": "BEHAVIOUR",
              "defaultValue": "SECONDS",
              "description": "The time unit for the operation timeout. This combines with operationTimeout to define the total default timeout for the operations that use this config.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "typeId": "java.util.concurrent.TimeUnit",
                  "enum": {
                    "values": [
                      "NANOSECONDS",
                      "MICROSECONDS",
                      "MILLISECONDS",
                      "SECONDS",
                      "MINUTES",
                      "HOURS",
                      "DAYS"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "operationTimeoutTimeUnit",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 5
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Zone ID"},
              "role": "BEHAVIOUR",
              "description": "Zone ID used to convert the provided timestamps into ZonedLocalDateTimes in the results. Default value is the system one.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "zoneId",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 6
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "role": "BEHAVIOUR",
              "description": "The identifier of this element used to reference it in other components",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": true,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "name",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 7
              },
              "allowedStereotypeModels": [],
              "isComponentId": true
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }],
        "connectionProviders": [{
          "displayModel": {"displayName": "Consumer Plaintext Connection"},
          "externalLibraryModels": [],
          "connectionManagementType": "CACHED",
          "supportsConnectivityTesting": true,
          "name": "consumer-plaintext-connection",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "bootstrapServers",
            "groupId",
            "consumerAmount",
            "maximumPollingInterval",
            "maximumPollingIntervalTimeUnit",
            "isolationLevel",
            "excludeInternalTopics",
            "autoOffsetReset",
            "retryBackoffTimeout",
            "retryBackoffTimeoutTimeUnit",
            "enableCRCCheck",
            "receiveBufferSize",
            "receiveBufferSizeUnit",
            "sendBufferSize",
            "sendBufferSizeUnit",
            "requestTimeout",
            "requestTimeoutTimeUnit",
            "recordLimit",
            "clientDNSLookup",
            "heartbeatInterval",
            "heartbeatIntervalTimeUnit",
            "sessionTimeout",
            "sessionTimeoutTimeUnit",
            "connectionsMaximumIdleTime",
            "connectionsMaximumIdleTimeUnit",
            "topicPatterns",
            "assignments",
            "fetchMinimumSize",
            "fetchMinimumSizeUnit",
            "fetchMaximumSize",
            "fetchMaximumSizeUnit",
            "maximumPartitionFetchSize",
            "maximumPartitionFetchSizeUnit",
            "fetchMaximumWaitTimeout",
            "fetchMaximumWaitTimeoutUnit"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "KAFKA",
            "type": "CONSUMER-PLAINTEXT-CONNECTION"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The urls that the consumer can try to use to connect to the kafka cluster.",
                    "displayName": "Bootstrap Server URLs",
                    "example": "localhost:9092,1.2.3.4:9092,abc.def.com:9092"
                  },
                  "role": "BEHAVIOUR",
                  "description": "The list of servers to bootstrap the connection with the kafka cluster. This can be a partial list of the available servers.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "String"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.lang.String"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "bootstrapServers",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Default Group ID for all the Kafka Consumers that use this configuration.",
                    "displayName": "Group ID",
                    "example": "test-consumer-group"
                  },
                  "role": "BEHAVIOUR",
                  "description": "TODO: What should the default value for this be? config name? Default Group ID for all the Kafka Consumers that use this configuration.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "groupId",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Defines how many consumers will be available in the consumer pool."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "Determines the number of consumers the connection will initially create.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "consumerAmount",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The amount of time to wait before attempting to retry a failed request to a given topic partition.",
                    "displayName": "Maximum polling interval"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "300",
                  "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumPollingInterval",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for max poll interval timeout.",
                    "example": "SECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for request timeout scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumPollingIntervalTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Controls how to read messages written transactionally",
                    "example": "read_committed"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "READ_UNCOMMITTED",
                  "description": "Controls how to read messages written transactionally. If set to <code>read_committed<\/code>, consumer.poll() will only return\" + \" transactional messages which have been committed. If set to <code>read_uncommitted<\/code>' (the default), consumer.poll() will return all messages, even transactional messages\" + \" which have been aborted. Non-transactional messages will be returned unconditionally in either mode.<\/p> <p>Messages will always be returned in offset order. Hence, in \" + \" <code>read_committed<\/code> mode, consumer.poll() will only return messages up to the last stable offset (LSO), which is the one less than the offset of the first open transaction.\" + \" In particular any messages appearing after messages belonging to ongoing transactions will be withheld until the relevant transaction has been completed. As a result, <code>read_committed<\/code>\" + \" consumers will not be able to read up to the high watermark when there are in flight transactions.<\/p><p> Further, when in <code>read_committed<\/code> the seekToEnd method will\" + \" return the LSO",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.IsolationLevel",
                      "enum": {
                        "values": [
                          "READ_UNCOMMITTED",
                          "READ_COMMITTED"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "isolationLevel",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Exclude or include internal topics that match a pattern used to subscribe to multiple topics.",
                    "displayName": "Exclude internal topics",
                    "example": "true"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "true",
                  "description": "Whether internal topics matching a subscribed pattern should be excluded from the subscription. It is always possible to explicitly subscribe to an internal topic.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "excludeInternalTopics",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Sets behavior for when the current offset to be committed doesn't exist in kafka.",
                    "displayName": "Auto offset reset"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "LATEST",
                  "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted): EARLIEST: automatically reset the offset to the earliest offset. LATEST: automatically reset the offset to the latest offset. ERROR: throw error to the if no previous offset is found for the consumer's group.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.AutoOffsetReset",
                      "enum": {
                        "values": [
                          "EARLIEST",
                          "LATEST",
                          "ERROR"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "autoOffsetReset",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The amount of time to wait before attempting to retry a failed request to a given topic partition.",
                    "example": "100"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "100",
                  "description": "The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "retryBackoffTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for retry backoff timeout.",
                    "example": "MILLISECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MILLISECONDS",
                  "description": "Determines the time unit for the reconnect backoff timeout scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "retryBackoffTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Enable CRC32 verification.",
                    "displayName": "Check CRC",
                    "example": "true"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "true",
                  "description": "Automatically check the CRC32 of the records consumed. This ensures no on-the-wire or on-disk corruption to the messages occurred. This check adds some overhead, so it may be disabled in cases seeking extreme performance.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "enableCRCCheck",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "TCP buffer size to receive data.",
                    "displayName": "Default receive buffer size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "64",
                  "description": "The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "receiveBufferSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Default receive buffer size unit"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the receive buffer size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "receiveBufferSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "TCP buffer size for sending data.\n",
                    "displayName": "Default send buffer size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "128",
                  "description": "The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sendBufferSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The send buffer size unit of measure.",
                    "displayName": "Default send buffer size unit",
                    "example": "KB"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the send buffer size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sendBufferSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The amount of time to wait before attempting to retry a failed request to a given topic partition.",
                    "example": "30"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "30",
                  "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "requestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 16
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for request timeout.",
                    "example": "SECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for request timeout scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "requestTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 17
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Maximum number of returned records on a single poll.",
                    "displayName": "Default record limit",
                    "example": "500"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "500",
                  "description": "The maximum number of records returned on a poll call to the Kafka cluster. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "recordLimit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 18
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Controls how the client uses DNS lookups",
                    "displayName": "DNS Lookups"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "DEFAULT",
                  "description": "Controls how the client uses DNS lookups. If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers. If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.ClientDNSLookup",
                      "enum": {
                        "values": [
                          "DEFAULT",
                          "USE_ALL_DNS_IPS",
                          "RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "clientDNSLookup",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 19
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time between heartbeat calls",
                    "displayName": "Heartbeat interval"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "3",
                  "description": "The expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities. Heartbeats are used to ensure that the consumer's session stays active and to facilitate rebalancing when new consumers join or leave the group. The value must be set lower than session.timeout.ms, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "heartbeatInterval",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 20
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Time unit for heartbeat interval"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for fetch heartbeat interval time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "heartbeatIntervalTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 21
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time to pass before consumer is removed from the group.",
                    "displayName": "Session Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "10",
                  "description": "The timeout used to detect consumer failures when using Kafka's group management facility. The consumer sends periodic heartbeats to indicate its liveness to the broker. If no heartbeats are received by the broker before the expiration of this session timeout, then the broker will remove this consumer from the group and initiate a rebalance. Note that the value must be in the allowable range as configured in the broker configuration by group.min.session.timeout.ms and group.max.session.timeout.ms.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sessionTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 22
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for session timeout",
                    "displayName": "Session timeout time unit"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for session timeout scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sessionTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 23
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time to wait before closing idle connection.",
                    "displayName": "Connection maximum idle time"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "540",
                  "description": "Close idle connections after the number of milliseconds specified by this config.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionsMaximumIdleTime",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 24
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "{@link TimeUnit} which qualifies the {@link connectionsMaximumIdleTime} parameter.",
                    "displayName": "Connection maximum idle time time unit"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for connections maximum idle time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionsMaximumIdleTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 25
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "TLS Configuration"},
                  "role": "BEHAVIOUR",
                  "description": "Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {"typeId": "RevocationCheck"},
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "displayModel": {"displayName": "topics"},
              "name": "topics",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The list of subscription regular expressions to subscribe to. This topics will be automatically rebalanced between the amount of consumers of the topic.",
                    "displayName": "Topic Subscription Patterns",
                    "example": "[\"topic1\",\".*topicX.*]]"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "String"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.lang.String"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "topicPatterns",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 26
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The list of topic-partition pairs to assign. Note that there will be no automatic rebalance of the consumers ",
                    "displayName": "Assignments",
                    "example": "[\"topic1\",\".*topicX.*]]"
                  },
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "@ref:com.mulesoft.connectors.kafka.api.source.TopicPartition"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["com.mulesoft.connectors.kafka.api.source.TopicPartition"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "assignments",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 27
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [{
                "isOneRequired": true,
                "exclusiveParameterNames": [
                  "assignments",
                  "topicPatterns"
                ]
              }],
              "showInDsl": false
            },
            {
              "displayModel": {"displayName": "Fetching configuration"},
              "name": "Fetch configuration",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "TCP buffer size for sending data.",
                    "displayName": "Default fetch minimum size",
                    "example": "1"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "The minimum amount of data the server should return for a fetch request. If insufficient data is available the request will wait for that much data to accumulate before answering the request. The default setting of 1 byte means that fetch requests are answered as soon as a single byte of data is available or the fetch request times out waiting for data to arrive. Setting this to something greater than 1 will cause the server to wait for larger amounts of data to accumulate which can improve server throughput a bit at the cost of some additional latency. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMinimumSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 28
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"example": "BYTE"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "BYTE",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMinimumSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 29
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Maximum response size.",
                    "displayName": "Default fetch maximum size",
                    "example": "50"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "The maximum amount of data the server should return for a fetch request. Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not an absolute maximum. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config). Note that the consumer performs multiple fetches in parallel. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMaximumSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 30
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum partition fetch size unit of measure.",
                    "displayName": "Default maximum fetch size unit",
                    "example": "MB"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MB",
                  "description": "The unit of measure for the maximum partition fetch size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMaximumSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 31
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum size of fetched records.",
                    "displayName": "Default maximum partition fetch size",
                    "example": "1"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "The maximum amount of data per-partition the server will return. Records are fetched in batches by the consumer. If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. The maximum record batch size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config). See fetch.max.bytes for limiting the consumer request size.This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumPartitionFetchSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 32
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum partition fetch size unit of measure.",
                    "displayName": "Default maximum partition fetch unit",
                    "example": "MB"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MB",
                  "description": "The unit of measure for the maximum partition fetch size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumPartitionFetchSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 33
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum amount of time the server will block before answering the fetch request.\n",
                    "example": "500"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "500",
                  "description": "The maximum amount of time the server will block before answering the fetch request if there isn't sufficient data to immediately satisfy the requirement given by fetch.min.bytes.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMaximumWaitTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 34
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Determines the time unit for fetch maximum wait timeout scalar.",
                    "example": "MILLISECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MILLISECONDS",
                  "description": "Determines the time unit for fetch maximum wait timeout scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "fetchMaximumWaitTimeoutUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 35
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "Reconnection"},
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {"typeId": "reconnect"},
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {"typeId": "reconnect-forever"},
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {"typeId": "ReconnectionStrategy"},
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 36
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        }]
      },
      {
        "displayModel": {"displayName": "Producer configuration"},
        "externalLibraryModels": [],
        "operations": [{
          "kind": "operation",
          "executionType": "CPU_LITE",
          "description": "Publish a message to the specified kafka topic, optionally specifying the partition, key and message content for it. The publish operation supports transactions.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "description": "The topic to publish to",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": true,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "topic",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Optional The partition tof",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "partition",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "Optional key for the published message",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "key",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "Optional message content of the message",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "message",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "CONTENT",
                  "description": "Optional headers for the message",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "java.util.Map",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [
                        "java.lang.String",
                        "java.io.InputStream"
                      ],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": true
                    }},
                    "type": "Object",
                    "fields": [],
                    "open": {
                      "annotations": {"classInformation": {
                        "implementedInterfaces": ["java.io.Closeable"],
                        "parent": "",
                        "classname": "java.io.InputStream",
                        "hasDefaultConstructor": true,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      }},
                      "type": "Binary"
                    }
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "headers",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"},
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "KAFKA",
                    "type": "PRODUCER-CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": "JOIN_IF_POSSIBLE",
                  "description": "The type of joining action that operations can take regarding transactions.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.extension.api.tx.OperationTransactionalAction",
                      "enum": {
                        "values": [
                          "ALWAYS_JOIN",
                          "JOIN_IF_POSSIBLE",
                          "NOT_SUPPORTED"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "transactionalAction",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 10
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:com.mulesoft.connectors.kafka.api.operation.KafkaMessageMetadata"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": false,
          "name": "publish",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "KAFKA",
              "type": "PROCESSOR"
            },
            "namespace": "KAFKA",
            "type": "PUBLISH"
          },
          "nestedComponents": [],
          "transactional": true,
          "notifications": [],
          "errors": [
            "KAFKA:INVALID_TOPIC_PARTITION",
            "KAFKA:RETRY_EXHAUSTED",
            "KAFKA:TIMEOUT",
            "KAFKA:CONNECTIVITY"
          ]
        }],
        "messageSources": [],
        "name": "producer-config",
        "description": "",
        "modelProperties": {"requiredForMetadata": {"requiredParameters": [
          "topic",
          "zoneId",
          "name"
        ]}},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "MODULE_CONFIG"
          },
          "namespace": "KAFKA",
          "type": "PRODUCER-CONFIG"
        },
        "parameterGroupModels": [{
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {
                "summary": "A default topic name.",
                "displayName": "Default topic",
                "example": "test-topic"
              },
              "role": "BEHAVIOUR",
              "defaultValue": "defaultTopicName",
              "description": "A default topic name to be used by the producer operations, overridable at operation config level.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "topic",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"displayName": "Zone ID"},
              "role": "BEHAVIOUR",
              "description": "TODO: Add comments.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "zoneId",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "role": "BEHAVIOUR",
              "description": "The identifier of this element used to reference it in other components",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": true,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "name",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": true
            },
            {
              "role": "BEHAVIOUR",
              "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "expiration-policy",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "format": "java",
                "annotations": {
                  "typeDsl": {
                    "allowTopLevelDefinition": false,
                    "allowInlineDefinition": true
                  },
                  "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                  "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {
                      "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                      "expressionSupport": {"value": "NOT_SUPPORTED"}
                    },
                    "model": {
                      "annotations": {
                        "default": "5",
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Long",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "maxIdleTime"}
                  },
                  {
                    "annotations": {
                      "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                      "expressionSupport": {"value": "NOT_SUPPORTED"}
                    },
                    "model": {
                      "annotations": {
                        "default": "MINUTES",
                        "enum": {
                          "values": [
                            "NANOSECONDS",
                            "MICROSECONDS",
                            "MILLISECONDS",
                            "SECONDS",
                            "MINUTES",
                            "HOURS",
                            "DAYS"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "key": {"name": "timeUnit"}
                  }
                ]
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "expirationPolicy",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }],
        "connectionProviders": [{
          "displayModel": {"displayName": "Producer Plaintext Connection"},
          "externalLibraryModels": [],
          "connectionManagementType": "NONE",
          "supportsConnectivityTesting": true,
          "name": "producer-plaintext-connection",
          "description": "",
          "modelProperties": {"requiredForMetadata": {"requiredParameters": [
            "bootstrapServers",
            "batchSize",
            "batchSizeUnit",
            "bufferSize",
            "bufferSizeUnit",
            "clientDNSLookup",
            "compressionType",
            "connectionsMaximumIdleTimeout",
            "connectionsMaximumIdleTimeUnit",
            "deliveryTimeout",
            "deliveryTimeoutTimeUnit",
            "idempotence",
            "lingerTime",
            "lingerTimeUnit",
            "maximumBlockTime",
            "maximumBlockTimeUnit",
            "maximumInFlightRequests",
            "maximumRequestSize",
            "maximumRequestSizeUnit",
            "producerAck",
            "receiveBufferSize",
            "receiveBufferSizeUnit",
            "retries",
            "retryBackoffTimeout",
            "retryBackoffTimeoutTimeUnit",
            "sendBufferSize",
            "sendBufferSizeUnit",
            "requestTimeout",
            "requestTimeoutTimeUnit"
          ]}},
          "stereotype": {
            "parent": {
              "namespace": "MULE",
              "type": "CONNECTION"
            },
            "namespace": "KAFKA",
            "type": "PRODUCER-PLAINTEXT-CONNECTION"
          },
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "summary": "The urls that the consumer can try to use to connect to the kafka cluster.",
                    "displayName": "Bootstrap server URLs",
                    "example": "localhost:9092,1.2.3.4:9092,abc.def.com:9092"
                  },
                  "role": "BEHAVIOUR",
                  "description": "The list of servers to bootstrap the connection with the kafka cluster. This can be a partial list of the available servers.",
                  "modelProperties": {},
                  "type": {
                    "item": {"type": "String"},
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.util.Collection"],
                      "parent": "",
                      "classname": "java.util.List",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": ["java.lang.String"],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "bootstrapServers",
                  "layoutModel": {
                    "password": false,
                    "tabName": "General",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Controls the default batch size in bytes.",
                    "displayName": "Batch size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "16",
                  "description": "The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition. This helps performance on both the client and the server. This configuration controls the default batch size in bytes. No attempt will be made to batch records larger than this size. Requests sent to brokers will contain multiple batches, one for each partition with data available to be sent. A small batch size will make batching less common and may reduce throughput (a batch size of zero will disable batching entirely). A very large batch size may use memory a bit more wastefully as we will always allocate a buffer of the specified batch size in anticipation of additional records.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "batchSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "The batch size unit of measure."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the batch size scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "batchSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
                    "displayName": "Buffer size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1000",
                  "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server. If records are sent faster than they can be delivered to the server the producer will block for max.block.ms after which it will throw an exception. This setting should correspond roughly to the total memory the producer will use, but is not a hard bound since not all memory the producer uses is used for buffering. Some additional memory will be used for compression (if compression is enabled) as well as for maintaining in-flight requests. The default value in the Kafka docs is of 33554432 (32MB), but this should be capped to align with expected values for mule instances in cloudhub (v0.1 core)",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bufferSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "The buffer memory size unit of measure."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the max request size scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "bufferSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Controls how the client uses DNS lookups",
                    "displayName": "DNS lookups"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "DEFAULT",
                  "description": "Controls how the client uses DNS lookups. If set to use_all_dns_ips then, when the lookup returns multiple IP addresses for a hostname, they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers. If the value is resolve_canonical_bootstrap_servers_only each entry will be resolved and expanded into a list of canonical names.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.ClientDNSLookup",
                      "enum": {
                        "values": [
                          "DEFAULT",
                          "USE_ALL_DNS_IPS",
                          "RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "clientDNSLookup",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The compression type for all data generated by the producer.",
                    "displayName": "Compression type"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "NONE",
                  "description": "The compression type for all data generated by the producer. The default is none (i.e. no compression). Valid values are none, gzip, snappy, lz4, or zstd. Compression is of full batches of data, so the efficacy of batching will also impact the compression ratio (more batching means better compression).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.CompressionType",
                      "enum": {
                        "values": [
                          "NONE",
                          "GZIP",
                          "SNAPPY",
                          "LZ4",
                          "ZSTD"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "compressionType",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Specifies the number of milliseconds after which the idle connections will be closed.",
                    "displayName": "Connections maximum idle time"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "540",
                  "description": "Close idle connections after the value specified by this config.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionsMaximumIdleTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for connections maximum idle.",
                    "displayName": "Connections maximum idle time unit"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for the connections maximum idle scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "connectionsMaximumIdleTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "An upper bound on the time to report success or failure after a call to send().",
                    "displayName": "Delivery Timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "120",
                  "description": "An upper bound on the time to report success or failure after a call to send() returns. This limits the total time that a record will be delayed prior to sending, the time to await acknowledgement from the broker (if expected), and the time allowed for retriable send failures. The producer may report failure to send a record earlier than this config if either an unrecoverable error is encountered, the retries have been exhausted, or the record is added to a batch which reached an earlier delivery expiration deadline. The value of this config should be greater than or equal to the sum of request.timeout.ms and linger.ms.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "deliveryTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for delivery timeout.",
                    "example": "SECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for the delivery timeout scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "deliveryTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Enable idempotence on producer instance.",
                    "displayName": "Enable idempotence"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc, may write duplicates of the retried message in the stream. Note that enabling idempotence requires max.in.flight.requests.per.connection to be less than or equal to 5, retries to be greater than 0 and acks must be 'all'. If these values are not explicitly set by the user, suitable values will be chosen. If incompatible values are set, a ConnectionException will be thrown",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "idempotence",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 11
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The upper bound of time to wait for batch size of records before sending.",
                    "displayName": "Linger time "
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "0",
                  "description": "The producer groups together any records that arrive in between request transmissions into a single batched request. Normally this occurs only under load when records arrive faster than they can be sent out. However in some circumstances the client may want to reduce the number of requests even under moderate load. This setting accomplishes this by adding a small amount of artificial delay?that is, rather than immediately sending out a record the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together. This can be thought of as analogous to Nagle's algorithm in TCP. This setting gives the upper bound on the delay for batching: once we get batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if we have fewer than this many bytes accumulated for this partition we will 'linger' for the specified time waiting for more records to show up. This setting defaults to 0 (i.e. no delay). Setting linger.ms=5, for example, would have the effect of reducing the number of requests sent but would add up to 5ms of latency to records sent in the absence of load.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lingerTime",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 12
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Time unit for linger time."},
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for the linger time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lingerTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 13
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The configuration controls how long KafkaProducer.send() and KafkaProducer.partitionsFor() will block.",
                    "displayName": "Maximum block time "
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "60",
                  "description": "The configuration controls how long KafkaProducer.send() and KafkaProducer.partitionsFor() will block.These methods can be blocked either because the buffer is full or metadata unavailable.Blocking in the user-supplied serializers or partitioner will not be counted against this timeout.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumBlockTime",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 14
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Time unit for maximum block time.",
                    "displayName": "Maximum block time unit"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for the maximum block time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumBlockTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 15
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum number of unacknowledged requests the client will send on a single connection before blocking.",
                    "displayName": "Maximum in flight requests"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "5",
                  "description": "The maximum number of unacknowledged requests the client will send on a single connection before blocking. Note that if this setting is set to be greater than 1 and there are failed sends, there is a risk of message re-ordering due to retries (i.e., if retries are enabled).",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumInFlightRequests",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 16
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum size of a request in bytes.",
                    "displayName": "Maximum request size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "The maximum size of a request in bytes. This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests. This is also effectively a cap on the maximum record batch size. Note that the server has its own cap on record batch size which may be different from this.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumRequestSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 17
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum request size unit of measure.",
                    "displayName": "Maximum request size unit."
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MB",
                  "description": "The unit of measure for the max request size scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "maximumRequestSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 18
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The number of acknowledgments the producer requires the leader to have received before considering a request complete.",
                    "displayName": "Producer Acknowledge Mode",
                    "example": "ALL"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "NONE",
                  "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the durability of records that are sent",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "com.mulesoft.connectors.kafka.api.params.enums.ProducerAck",
                      "enum": {
                        "values": [
                          "NONE",
                          "LEADER_ONLY",
                          "ALL"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "producerAck",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 19
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "TCP buffer size to receive data.",
                    "displayName": "Default receive buffer size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "64",
                  "description": "The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "receiveBufferSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 20
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Default receive buffer size unit"},
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the receive buffer size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "receiveBufferSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 21
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "How many times to retry sending a batch.",
                    "displayName": "Retries amount"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "1",
                  "description": "Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error. Note that this retry is no different than if the client resent the record upon receiving the error. Allowing retries without setting max.in.flight.requests.per.connection to 1 will potentially change the ordering of records because if two batches are sent to a single partition, and the first fails and is retried but the second succeeds, then the records in the second batch may appear first. Note additionally that produce requests will be failed before the number of retries has been exhausted if the timeout configured by delivery.timeout.ms expires first before successful acknowledgement. Users should generally prefer to leave this config unset and instead use delivery.timeout.ms to control retry behavior.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "retries",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 22
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The time to wait before attempting to retry a failed request to a given topic partition.",
                    "displayName": "Retry backoff timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "100",
                  "description": "The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "retryBackoffTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 23
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The retry backoff timeout time unit.",
                    "example": "MILLISECONDS"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "MILLISECONDS",
                  "description": "Determines the time unit for the retry backoff timeout time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "retryBackoffTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 24
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "TCP buffer size for sending data.",
                    "displayName": "Default send buffer size"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "128",
                  "description": "The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Integer",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sendBufferSize",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 25
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The send buffer size unit of measure.",
                    "displayName": "Default send buffer size unit",
                    "example": "KB"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "KB",
                  "description": "The unit of measure for the send buffer size scalar. This parameter can be overridden at source level.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "org.mule.runtime.api.util.DataUnit",
                      "enum": {
                        "values": [
                          "BYTE",
                          "KB",
                          "MB",
                          "GB"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sendBufferSizeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 26
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The maximum amount of time the client will wait for the response of a request.",
                    "displayName": "Default request timeout"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "30",
                  "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted. This should be larger than replica.lag.time.max.ms (a broker configuration) to reduce the possibility of message duplication due to unnecessary producer retries.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "int",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "requestTimeout",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 29
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "The request timeout time unit.",
                    "displayName": "Default request timeout time unit"
                  },
                  "role": "BEHAVIOUR",
                  "defaultValue": "SECONDS",
                  "description": "Determines the time unit for the request timeout time scalar.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "requestTimeoutTimeUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 30
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "TLS Configuration"},
                  "role": "BEHAVIOUR",
                  "description": "Protocol to use for communication. Valid values are HTTP and HTTPS. Default value is HTTP. When using HTTPS the HTTP communication is going to be secured using TLS / SSL. If HTTPS was configured as protocol then the user needs to configure at least the keystore in the tls:context child element of this listener-config.",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "context",
                      "prefix": "tls",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                    }}
                  },
                  "type": {
                    "format": "java",
                    "annotations": {
                      "typeDsl": {
                        "allowTopLevelDefinition": true,
                        "allowInlineDefinition": true
                      },
                      "QName": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                      "stereotype": {"allowedStereotypes": [{
                        "namespace": "TLS",
                        "type": "CONTEXT"
                      }]},
                      "typeAlias": {"value": "Tls"}
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledProtocols"}
                      },
                      {
                        "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                        "model": {"type": "String"},
                        "key": {"name": "enabledCipherSuites"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                            "typeId": "TrustStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the trust store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            },
                            {
                              "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                              "model": {
                                "annotations": {"default": "false"},
                                "type": "Boolean"
                              },
                              "key": {"name": "insecure"}
                            }
                          ]
                        },
                        "key": {"name": "trust-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "annotations": {
                            "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                            "typeId": "KeyStore"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {
                                "display": {"displayModel": {"pathModel": {
                                  "fileExtensions": [],
                                  "acceptsUrls": false,
                                  "location": "EMBEDDED",
                                  "type": "FILE"
                                }}},
                                "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "path"}
                            },
                            {
                              "annotations": {"description": {"value": "The type of store used."}},
                              "model": {
                                "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                "type": "String"
                              },
                              "key": {"name": "type"}
                            },
                            {
                              "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                              "model": {"type": "String"},
                              "key": {"name": "alias"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the private key."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "keyPassword"}
                            },
                            {
                              "annotations": {
                                "layout": {"layoutModel": {
                                  "password": true,
                                  "query": false,
                                  "text": false
                                }},
                                "description": {"value": "The password used to protect the key store."}
                              },
                              "model": {"type": "String"},
                              "key": {"name": "password"}
                            },
                            {
                              "annotations": {"description": {"value": "The algorithm used by the key store."}},
                              "model": {"type": "String"},
                              "key": {"name": "algorithm"}
                            }
                          ]
                        },
                        "key": {"name": "key-store"}
                      },
                      {
                        "annotations": {
                          "parameterDsl": {
                            "allowInlineDefinition": true,
                            "allowReferences": false
                          },
                          "expressionSupport": {"value": "NOT_SUPPORTED"}
                        },
                        "model": {
                          "of": [
                            {
                              "annotations": {
                                "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                "typeId": "standard-revocation-check"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "onlyEndEntities"}
                                },
                                {
                                  "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "preferCrls"}
                                },
                                {
                                  "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "noFallback"}
                                },
                                {
                                  "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                  "model": {
                                    "annotations": {"default": "false"},
                                    "type": "Boolean"
                                  },
                                  "key": {"name": "softFail"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                "typeId": "custom-ocsp-responder"
                              },
                              "type": "Object",
                              "fields": [
                                {
                                  "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "url"}
                                },
                                {
                                  "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "certAlias"}
                                }
                              ]
                            },
                            {
                              "annotations": {
                                "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                "typeId": "crl-file"
                              },
                              "type": "Object",
                              "fields": [{
                                "annotations": {"description": {"value": "The path to the CRL file."}},
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              }]
                            }
                          ],
                          "annotations": {"typeId": "RevocationCheck"},
                          "type": "Union"
                        },
                        "key": {"name": "revocation-check"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": true,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "tlsContext",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Security",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "TLS",
                    "type": "CONTEXT"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "Reconnection"},
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {"typeId": "reconnect"},
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {"typeId": "reconnect-forever"},
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {"typeId": "ReconnectionStrategy"},
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 27
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ]
        }]
      }
    ],
    "externalLibraries": [],
    "description": "",
    "resources": [],
    "subTypes": [],
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [],
    "version": "4.0.0",
    "privilegedArtifacts": [],
    "importedTypes": [{
      "format": "java",
      "annotations": {
        "extensibleType": {},
        "classInformation": {
          "implementedInterfaces": [],
          "parent": "",
          "classname": "org.mule.runtime.api.store.ObjectStore",
          "hasDefaultConstructor": false,
          "isInstantiable": false,
          "isFinal": false,
          "genericTypes": [],
          "isInterface": true,
          "isAbstract": true,
          "isMap": false
        },
        "typeId": "org.mule.runtime.api.store.ObjectStore",
        "typeAlias": {"value": "ObjectStore"}
      },
      "type": "Object",
      "fields": []
    }],
    "xmlDsl": {
      "schemaVersion": "4.0.0",
      "prefix": "kafka",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/kafka/current/mule-kafka.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/kafka",
      "xsdFileName": "mule-kafka.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "name": "Apache Kafka",
    "privilegedPackages": [],
    "category": "SELECT",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "KAFKA:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:OUT_OF_RANGE",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "KAFKA:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_CONFIGURATION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_ACK_MODE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:TIMEOUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:NOT_FOUND",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_INPUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:PREVIOUS_ASSIGNATION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:SESSION_NOT_FOUND",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_TOPIC_PARTITION",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:ILLEGAL_STATE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:NO_POLL_MADE",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:AUTHENTICATION_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_TOPIC",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:INVALID_OFFSET",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:AUTHORIZATION_ERROR",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "KAFKA:PRODUCER_FENCED",
        "handleable": true
      }
    ]
  }
}